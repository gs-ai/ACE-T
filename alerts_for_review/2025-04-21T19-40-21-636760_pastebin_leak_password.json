{
  "timestamp": "2025-04-21T19:40:21.636760",
  "source": "pastebin",
  "signal_type": "triggered_content",
  "severity": "medium",
  "trigger_id": "leak_password",
  "context": "Pastebin paste CL4PG0Qa: Common leaked password",
  "title": "Pastebin paste CL4PG0Qa",
  "extra_data": {
    "title": "Pastebin paste CL4PG0Qa",
    "content": "\u2705 Backend: Node.js + Express (Twilio OTP Server)\r\nnpm install express cors dotenv twilio\r\n\r\n.env\r\nPORT=5000\r\nTWILIO_SID=your_twilio_sid\r\nTWILIO_AUTH_TOKEN=your_twilio_auth_token\r\nTWILIO_PHONE=+1234567890\r\n\r\n\ud83d\udcc4 twilioClient.js\r\nimport twilio from 'twilio';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nconst client = twilio(process.env.TWILIO_SID, process.env.TWILIO_AUTH_TOKEN);\r\nexport default client;\r\n\r\n\ud83d\udcc4 routes/otp.js\r\nimport express from 'express';\r\nimport client from '../twilioClient.js';\r\n\r\nconst router = express.Router();\r\nconst otpStore = {};\r\n\r\nrouter.post('/send', async (req, res) => {\r\n  const { phone } = req.body;\r\n  const code = Math.floor(100000 + Math.random() * 900000).toString();\r\n  otpStore[phone] = { code, expires: Date.now() + 300000 };\r\n\r\n  await client.messages.create({\r\n    body: `Your OTP is: ${code}`,\r\n    from: process.env.TWILIO_PHONE,\r\n    to: phone,\r\n  });\r\n\r\n  res.json({ message: 'OTP sent' });\r\n});\r\n\r\nrouter.post('/verify', (req, res) => {\r\n  const { phone, code } = req.body;\r\n  const record = otpStore[phone];\r\n\r\n  if (!record || Date.now() > record.expires) {\r\n    return res.status(400).json({ success: false, message: 'OTP expired or invalid' });\r\n  }\r\n\r\n  if (record.code !== code) {\r\n    return res.status(400).json({ success: false, message: 'Invalid OTP' });\r\n  }\r\n\r\n  delete otpStore[phone];\r\n  res.json({ success: true, message: 'OTP verified' });\r\n});\r\n\r\nexport default router;\r\n\r\n\ud83d\udcc4 server.js\r\nimport express from 'express';\r\nimport dotenv from 'dotenv';\r\nimport cors from 'cors';\r\nimport otpRoutes from './routes/otp.js';\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\napp.use('/api/otp', otpRoutes);\r\n\r\napp.listen(process.env.PORT, () => {\r\n  console.log(`Server running on port ${process.env.PORT}`);\r\n});\r\n\r\n\ud83d\udcbb Frontend: React (Vite)\r\n\ud83d\udce6 Install Vite + Axios\r\nnpm create vite@latest frontend --template react\r\ncd frontend\r\nnpm install axios\r\n\r\n\ud83d\udcc4 OtpForm.jsx\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API = 'http://localhost:5000/api/otp';\r\n\r\nexport default function OtpForm() {\r\n  const [phone, setPhone] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [stage, setStage] = useState('input');\r\n\r\n  const sendOTP = async () => {\r\n    await axios.post(`${API}/send`, { phone });\r\n    setStage('verify');\r\n  };\r\n\r\n  const verifyOTP = async () => {\r\n    const res = await axios.post(`${API}/verify`, { phone, code });\r\n    alert(res.data.message);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-20 p-4 border rounded\">\r\n      <h2 className=\"text-xl mb-4 font-bold\">Phone OTP Login</h2>\r\n\r\n      {stage === 'input' ? (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter phone number\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            className=\"border p-2 w-full mb-3\"\r\n          />\r\n          <button onClick={sendOTP} className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n            Send OTP\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={code}\r\n            onChange={(e) => setCode(e.target.value)}\r\n            className=\"border p-2 w-full mb-3\"\r\n          />\r\n          <button onClick={verifyOTP} className=\"bg-green-500 text-white px-4 py-2 rounded\">\r\n            Verify\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\ud83d\udcc4 App.jsx\r\nimport OtpForm from './components/OtpForm';\r\n\r\nfunction App() {\r\n  return <OtpForm />;\r\n}\r\n\r\nexport default App;\r\n\r\n\ud83e\uddea Test the Flow\r\nStart your backend: node server.js\r\nStart frontend: npm run dev\r\n",
    "url": "https://pastebin.com/CL4PG0Qa",
    "paste_id": "CL4PG0Qa",
    "source": "pastebin",
    "geo_info": {
      "country": "Unknown",
      "city": "Unknown",
      "lat": null,
      "lon": null
    },
    "source_url": "https://pastebin.com/CL4PG0Qa",
    "detected_at": "2025-04-21T19:40:21.634953",
    "first_seen": "2025-04-21T19:40:21.634975",
    "last_seen": "2025-04-21T19:40:21.634979",
    "entities": {
      "organizations": [],
      "keywords": [
        "backend",
        "node",
        "express",
        "twilio",
        "server",
        "install",
        "express",
        "cors",
        "dotenv",
        "twilio",
        "port",
        "5000",
        "twilio_sid",
        "your_twilio_sid",
        "twilio_auth_token",
        "your_twilio_auth_token",
        "twilio_phone",
        "1234567890",
        "twilioclient",
        "import",
        "twilio",
        "from",
        "twilio",
        "import",
        "dotenv",
        "from",
        "dotenv",
        "dotenv",
        "config",
        "const",
        "client",
        "twilio",
        "process",
        "twilio_sid",
        "process",
        "twilio_auth_token",
        "export",
        "default",
        "client",
        "routes",
        "import",
        "express",
        "from",
        "express",
        "import",
        "client",
        "from",
        "twilioclient",
        "const",
        "router",
        "express",
        "router",
        "const",
        "otpstore",
        "router",
        "post",
        "send",
        "async",
        "const",
        "phone",
        "body",
        "const",
        "code",
        "math",
        "floor",
        "100000",
        "math",
        "random",
        "900000",
        "tostring",
        "otpstore",
        "phone",
        "code",
        "expires",
        "date",
        "300000",
        "await",
        "client",
        "messages",
        "create",
        "body",
        "your",
        "code",
        "from",
        "process",
        "twilio_phone",
        "phone",
        "json",
        "message",
        "sent",
        "router",
        "post",
        "verify",
        "const",
        "phone",
        "code",
        "body",
        "const",
        "record",
        "otpstore",
        "phone",
        "record",
        "date",
        "record",
        "expires",
        "return",
        "status",
        "json",
        "success",
        "false",
        "message",
        "expired",
        "invalid",
        "record",
        "code",
        "code",
        "return",
        "status",
        "json",
        "success",
        "false",
        "message",
        "invalid",
        "delete",
        "otpstore",
        "phone",
        "json",
        "success",
        "true",
        "message",
        "verified",
        "export",
        "default",
        "router",
        "server",
        "import",
        "express",
        "from",
        "express",
        "import",
        "dotenv",
        "from",
        "dotenv",
        "import",
        "cors",
        "from",
        "cors",
        "import",
        "otproutes",
        "from",
        "routes",
        "dotenv",
        "config",
        "const",
        "express",
        "cors",
        "express",
        "json",
        "otproutes",
        "listen",
        "process",
        "port",
        "console",
        "server",
        "running",
        "port",
        "process",
        "port",
        "frontend",
        "react",
        "vite",
        "install",
        "vite",
        "axios",
        "create",
        "vite",
        "latest",
        "frontend",
        "template",
        "react",
        "frontend",
        "install",
        "axios",
        "otpform",
        "import",
        "usestate",
        "from",
        "react",
        "import",
        "axios",
        "from",
        "axios",
        "const",
        "http",
        "localhost",
        "5000",
        "export",
        "default",
        "function",
        "otpform",
        "const",
        "phone",
        "setphone",
        "usestate",
        "const",
        "code",
        "setcode",
        "usestate",
        "const",
        "stage",
        "setstage",
        "usestate",
        "input",
        "const",
        "sendotp",
        "async",
        "await",
        "axios",
        "post",
        "send",
        "phone",
        "setstage",
        "verify",
        "const",
        "verifyotp",
        "async",
        "const",
        "await",
        "axios",
        "post",
        "verify",
        "phone",
        "code",
        "alert",
        "data",
        "message",
        "return",
        "classname",
        "auto",
        "border",
        "rounded",
        "classname",
        "text",
        "font",
        "bold",
        "phone",
        "login",
        "stage",
        "input",
        "input",
        "type",
        "text",
        "placeholder",
        "enter",
        "phone",
        "number",
        "value",
        "phone",
        "onchange",
        "setphone",
        "target",
        "value",
        "classname",
        "border",
        "full",
        "button",
        "onclick",
        "sendotp",
        "classname",
        "blue",
        "text",
        "white",
        "rounded",
        "send",
        "button",
        "input",
        "type",
        "text",
        "placeholder",
        "enter",
        "value",
        "code",
        "onchange",
        "setcode",
        "target",
        "value",
        "classname",
        "border",
        "full",
        "button",
        "onclick",
        "verifyotp",
        "classname",
        "green",
        "text",
        "white",
        "rounded",
        "verify",
        "button",
        "import",
        "otpform",
        "from",
        "components",
        "otpform",
        "function",
        "return",
        "otpform",
        "export",
        "default",
        "test",
        "flow",
        "start",
        "your",
        "backend",
        "node",
        "server",
        "start",
        "frontend"
      ]
    },
    "threat_analysis": {
      "potential_impact": "Potential impact related to 123456",
      "risk_vector": "Pastebin public paste",
      "related_terms": [
        "data breach",
        "leak",
        "cybersecurity"
      ]
    },
    "trend_velocity": {
      "increase_percent": 84,
      "previous_day_volume": 62,
      "current_volume": 349
    },
    "sentiment": "positive",
    "tags": [
      "osint",
      "pastebin",
      "cyber-intel"
    ],
    "classification": "Confidential",
    "city": "Unknown",
    "country": "Unknown"
  },
  "extra": "{\"region\": \"Unknown\", \"trend\": \"84% (vol: 349)\", \"sentiment\": \"positive\", \"source_url\": \"https://pastebin.com/CL4PG0Qa\", \"lat\": \"\", \"lon\": \"\", \"city\": \"Unknown\", \"country\": \"Unknown\"}"
}